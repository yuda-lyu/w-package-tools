!function(U,F){"object"==typeof exports&&"undefined"!=typeof module?module.exports=F(require("worker_threads")):"function"==typeof define&&define.amd?define(["worker_threads"],F):(U="undefined"!=typeof globalThis?globalThis:U||self).gWorker5_FunAsm=F(U.worker_threads)}(this,(function(U){"use strict";"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function F(U){return U&&U.__esModule&&Object.prototype.hasOwnProperty.call(U,"default")?U.default:U}var Q={exports:{}};!function(F,Q){F.exports=function(U){function F(U){return U&&U.__esModule&&Object.prototype.hasOwnProperty.call(U,"default")?U.default:U}var Q={exports:{}};!function(U){var F=Object.prototype.hasOwnProperty,Q="~";function B(){}function V(U,F,Q){this.fn=U,this.context=F,this.once=Q||!1}function l(U,F,B,l,R){if("function"!=typeof B)throw new TypeError("The listener must be a function");var d=new V(B,l||U,R),Z=Q?Q+F:F;return U._events[Z]?U._events[Z].fn?U._events[Z]=[U._events[Z],d]:U._events[Z].push(d):(U._events[Z]=d,U._eventsCount++),U}function R(U,F){0==--U._eventsCount?U._events=new B:delete U._events[F]}function d(){this._events=new B,this._eventsCount=0}Object.create&&(B.prototype=Object.create(null),(new B).__proto__||(Q=!1)),d.prototype.eventNames=function(){var U,B,V=[];if(0===this._eventsCount)return V;for(B in U=this._events)F.call(U,B)&&V.push(Q?B.slice(1):B);return Object.getOwnPropertySymbols?V.concat(Object.getOwnPropertySymbols(U)):V},d.prototype.listeners=function(U){var F=Q?Q+U:U,B=this._events[F];if(!B)return[];if(B.fn)return[B.fn];for(var V=0,l=B.length,R=new Array(l);V<l;V++)R[V]=B[V].fn;return R},d.prototype.listenerCount=function(U){var F=Q?Q+U:U,B=this._events[F];return B?B.fn?1:B.length:0},d.prototype.emit=function(U,F,B,V,l,R){var d=Q?Q+U:U;if(!this._events[d])return!1;var Z,J,W=this._events[d],S=arguments.length;if(W.fn){switch(W.once&&this.removeListener(U,W.fn,void 0,!0),S){case 1:return W.fn.call(W.context),!0;case 2:return W.fn.call(W.context,F),!0;case 3:return W.fn.call(W.context,F,B),!0;case 4:return W.fn.call(W.context,F,B,V),!0;case 5:return W.fn.call(W.context,F,B,V,l),!0;case 6:return W.fn.call(W.context,F,B,V,l,R),!0}for(J=1,Z=new Array(S-1);J<S;J++)Z[J-1]=arguments[J];W.fn.apply(W.context,Z)}else{var E,c=W.length;for(J=0;J<c;J++)switch(W[J].once&&this.removeListener(U,W[J].fn,void 0,!0),S){case 1:W[J].fn.call(W[J].context);break;case 2:W[J].fn.call(W[J].context,F);break;case 3:W[J].fn.call(W[J].context,F,B);break;case 4:W[J].fn.call(W[J].context,F,B,V);break;default:if(!Z)for(E=1,Z=new Array(S-1);E<S;E++)Z[E-1]=arguments[E];W[J].fn.apply(W[J].context,Z)}}return!0},d.prototype.on=function(U,F,Q){return l(this,U,F,Q,!1)},d.prototype.once=function(U,F,Q){return l(this,U,F,Q,!0)},d.prototype.removeListener=function(U,F,B,V){var l=Q?Q+U:U;if(!this._events[l])return this;if(!F)return R(this,l),this;var d=this._events[l];if(d.fn)d.fn!==F||V&&!d.once||B&&d.context!==B||R(this,l);else{for(var Z=0,J=[],W=d.length;Z<W;Z++)(d[Z].fn!==F||V&&!d[Z].once||B&&d[Z].context!==B)&&J.push(d[Z]);J.length?this._events[l]=1===J.length?J[0]:J:R(this,l)}return this},d.prototype.removeAllListeners=function(U){var F;return U?(F=Q?Q+U:U,this._events[F]&&R(this,F)):(this._events=new B,this._eventsCount=0),this},d.prototype.off=d.prototype.removeListener,d.prototype.addListener=d.prototype.on,d.prefixed=Q,d.EventEmitter=d,U.exports=d}(Q);var B=F(Q.exports);let V;return function(){if("nodejs"!=("undefined"!=typeof window&&void 0!==window.document?"browser":"nodejs"))return null;function F(){let U,F,Q=new Promise((function(){U=arguments[0],F=arguments[1]}));return Q.resolve=U,Q.reject=F,Q}function Q(){let U=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,F=[],Q="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),B=Q.length;for(let V=0;V<U;V++)F[V]=Q[0|Math.random()*B];return F.join("")}let l=(R="",Buffer.from(R,"base64").toString("utf8"));var R;V=function(){let V=new B,R=function(F){try{return new U.Worker(F,{eval:!0})}catch(U){d(U)}}(l);if(!R)return d("invalid worker"),null;function d(U){V.emit("error",U)}return R.on("message",(function(U){let F=U,Q=F.mode;"emit"!==Q&&"return"!==Q||("emit"===Q&&V.emit(F.evName,F.msg),"return"===Q&&V.emit(F.id,F))})),R.on("error",d),R.on("exit",(U=>{1!==U&&d("exit code["+U+"] !== 1")})),function(){let U={mode:"init",type:"function",input:[...arguments]};R.postMessage(U)}([...arguments]),V.tf1=function(){let U=F(),B=Q(),l={mode:"call",id:B,fun:"tf1",input:[...arguments]};return R.postMessage(l),V.once(B,(F=>{"success"===F.state?U.resolve(F.msg):U.reject(F.msg)})),U},V.tf2=function(){let U=F(),B=Q(),l={mode:"call",id:B,fun:"tf2",input:[...arguments]};return R.postMessage(l),V.once(B,(F=>{"success"===F.state?U.resolve(F.msg):U.reject(F.msg)})),U},V.tf3=function(){let U=F(),B=Q(),l={mode:"call",id:B,fun:"tf3",input:[...arguments]};return R.postMessage(l),V.once(B,(F=>{"success"===F.state?U.resolve(F.msg):U.reject(F.msg)})),U},V.tf4=function(){let U=F(),B=Q(),l={mode:"call",id:B,fun:"tf4",input:[...arguments]};return R.postMessage(l),V.once(B,(F=>{"success"===F.state?U.resolve(F.msg):U.reject(F.msg)})),U},V.tf5=function(){let U=F(),B=Q(),l={mode:"call",id:B,fun:"tf5",input:[...arguments]};return R.postMessage(l),V.once(B,(F=>{"success"===F.state?U.resolve(F.msg):U.reject(F.msg)})),U},V.terminate=function(){R?(R.terminate(),R=void 0):d("worker has been terminated")},V}}(),process.on("unhandledRejection",(U=>{console.log("outer:unhandledRejection",U)})),process.on("uncaughtException",(U=>{console.log("outer:uncaughtException",U)})),process.on("uncaughtExceptionMonitor",(U=>{console.log("outer:uncaughtExceptionMonitor",U)})),V}(U)}(Q);var B=F(Q.exports),V={exports:{}};!function(U,F){U.exports=function(){const U="function"==typeof Buffer,F="function"==typeof TextDecoder?new TextDecoder:void 0,Q=(U=>{let F={};return U.forEach(((U,Q)=>F[U]=Q)),F})(("function"==typeof TextEncoder&&new TextEncoder,Array.prototype.slice.call("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="))),B=/^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/,V=String.fromCharCode.bind(String),l="function"==typeof Uint8Array.from?Uint8Array.from.bind(Uint8Array):U=>new Uint8Array(Array.prototype.slice.call(U,0)),R=U=>U.replace(/[^A-Za-z0-9\+\/]/g,""),d=/[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g,Z=U=>{switch(U.length){case 4:var F=((7&U.charCodeAt(0))<<18|(63&U.charCodeAt(1))<<12|(63&U.charCodeAt(2))<<6|63&U.charCodeAt(3))-65536;return V(55296+(F>>>10))+V(56320+(1023&F));case 3:return V((15&U.charCodeAt(0))<<12|(63&U.charCodeAt(1))<<6|63&U.charCodeAt(2));default:return V((31&U.charCodeAt(0))<<6|63&U.charCodeAt(1))}},J=U=>U.replace(d,Z),W=U=>{if(U=U.replace(/\s+/g,""),!B.test(U))throw new TypeError("malformed base64.");U+="==".slice(2-(3&U.length));let F,l,R,d="";for(let B=0;B<U.length;)F=Q[U.charAt(B++)]<<18|Q[U.charAt(B++)]<<12|(l=Q[U.charAt(B++)])<<6|(R=Q[U.charAt(B++)]),d+=64===l?V(F>>16&255):64===R?V(F>>16&255,F>>8&255):V(F>>16&255,F>>8&255,255&F);return d},S="function"==typeof atob?U=>atob(R(U)):U?U=>Buffer.from(U,"base64").toString("binary"):W,E=U?U=>l(Buffer.from(U,"base64")):U=>l(S(U).split("").map((U=>U.charCodeAt(0)))),c=U?U=>Buffer.from(U,"base64").toString("utf8"):F?U=>F.decode(E(U)):U=>J(S(U)),m=U=>R(U.replace(/[-_]/g,(U=>"-"==U?"+":"/"))),N=U=>c(m(U)),b=N;function I(U){return U&&U.__esModule&&Object.prototype.hasOwnProperty.call(U,"default")?U.default:U}var X={exports:{}};!function(U){var F=Object.prototype.hasOwnProperty,Q="~";function B(){}function V(U,F,Q){this.fn=U,this.context=F,this.once=Q||!1}function l(U,F,B,l,R){if("function"!=typeof B)throw new TypeError("The listener must be a function");var d=new V(B,l||U,R),Z=Q?Q+F:F;return U._events[Z]?U._events[Z].fn?U._events[Z]=[U._events[Z],d]:U._events[Z].push(d):(U._events[Z]=d,U._eventsCount++),U}function R(U,F){0==--U._eventsCount?U._events=new B:delete U._events[F]}function d(){this._events=new B,this._eventsCount=0}Object.create&&(B.prototype=Object.create(null),(new B).__proto__||(Q=!1)),d.prototype.eventNames=function(){var U,B,V=[];if(0===this._eventsCount)return V;for(B in U=this._events)F.call(U,B)&&V.push(Q?B.slice(1):B);return Object.getOwnPropertySymbols?V.concat(Object.getOwnPropertySymbols(U)):V},d.prototype.listeners=function(U){var F=Q?Q+U:U,B=this._events[F];if(!B)return[];if(B.fn)return[B.fn];for(var V=0,l=B.length,R=new Array(l);V<l;V++)R[V]=B[V].fn;return R},d.prototype.listenerCount=function(U){var F=Q?Q+U:U,B=this._events[F];return B?B.fn?1:B.length:0},d.prototype.emit=function(U,F,B,V,l,R){var d=Q?Q+U:U;if(!this._events[d])return!1;var Z,J,W=this._events[d],S=arguments.length;if(W.fn){switch(W.once&&this.removeListener(U,W.fn,void 0,!0),S){case 1:return W.fn.call(W.context),!0;case 2:return W.fn.call(W.context,F),!0;case 3:return W.fn.call(W.context,F,B),!0;case 4:return W.fn.call(W.context,F,B,V),!0;case 5:return W.fn.call(W.context,F,B,V,l),!0;case 6:return W.fn.call(W.context,F,B,V,l,R),!0}for(J=1,Z=new Array(S-1);J<S;J++)Z[J-1]=arguments[J];W.fn.apply(W.context,Z)}else{var E,c=W.length;for(J=0;J<c;J++)switch(W[J].once&&this.removeListener(U,W[J].fn,void 0,!0),S){case 1:W[J].fn.call(W[J].context);break;case 2:W[J].fn.call(W[J].context,F);break;case 3:W[J].fn.call(W[J].context,F,B);break;case 4:W[J].fn.call(W[J].context,F,B,V);break;default:if(!Z)for(E=1,Z=new Array(S-1);E<S;E++)Z[E-1]=arguments[E];W[J].fn.apply(W[J].context,Z)}}return!0},d.prototype.on=function(U,F,Q){return l(this,U,F,Q,!1)},d.prototype.once=function(U,F,Q){return l(this,U,F,Q,!0)},d.prototype.removeListener=function(U,F,B,V){var l=Q?Q+U:U;if(!this._events[l])return this;if(!F)return R(this,l),this;var d=this._events[l];if(d.fn)d.fn!==F||V&&!d.once||B&&d.context!==B||R(this,l);else{for(var Z=0,J=[],W=d.length;Z<W;Z++)(d[Z].fn!==F||V&&!d[Z].once||B&&d[Z].context!==B)&&J.push(d[Z]);J.length?this._events[l]=1===J.length?J[0]:J:R(this,l)}return this},d.prototype.removeAllListeners=function(U){var F;return U?(F=Q?Q+U:U,this._events[F]&&R(this,F)):(this._events=new B,this._eventsCount=0),this},d.prototype.off=d.prototype.removeListener,d.prototype.addListener=d.prototype.on,d.prefixed=Q,d.EventEmitter=d,U.exports=d}(X);var G=I(X.exports);let k;return function(){if("browser"!=("undefined"!=typeof window&&void 0!==window.document?"browser":"nodejs"))return null;function U(){let U,F,Q=new Promise((function(){U=arguments[0],F=arguments[1]}));return Q.resolve=U,Q.reject=F,Q}function F(){let U=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,F=[],Q="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),B=Q.length;for(let V=0;V<U;V++)F[V]=Q[0|Math.random()*B];return F.join("")}let Q=b("");k=function(){let B=new G,V=function(U){try{let F=new Blob([U]),Q=window.URL||window.webkitURL;return new Worker(Q.createObjectURL(F))}catch(U){l(U)}}(Q);if(!V)return l("invalid worker"),null;function l(U){B.emit("error",U)}return V.onmessage=function(U){!function(U){let F=U,Q=F.mode;"emit"!==Q&&"return"!==Q||("emit"===Q&&B.emit(F.evName,F.msg),"return"===Q&&B.emit(F.id,F))}(U.data)},V.onerror=l,V.onmessageerror=function(U){l(U.data)},function(){let U={mode:"init",type:"function",input:[...arguments]};V.postMessage(U)}([...arguments]),B.tf1=function(){let Q=U(),l=F(),R={mode:"call",id:l,fun:"tf1",input:[...arguments]};return V.postMessage(R),B.once(l,(U=>{"success"===U.state?Q.resolve(U.msg):Q.reject(U.msg)})),Q},B.tf2=function(){let Q=U(),l=F(),R={mode:"call",id:l,fun:"tf2",input:[...arguments]};return V.postMessage(R),B.once(l,(U=>{"success"===U.state?Q.resolve(U.msg):Q.reject(U.msg)})),Q},B.tf3=function(){let Q=U(),l=F(),R={mode:"call",id:l,fun:"tf3",input:[...arguments]};return V.postMessage(R),B.once(l,(U=>{"success"===U.state?Q.resolve(U.msg):Q.reject(U.msg)})),Q},B.tf4=function(){let Q=U(),l=F(),R={mode:"call",id:l,fun:"tf4",input:[...arguments]};return V.postMessage(R),B.once(l,(U=>{"success"===U.state?Q.resolve(U.msg):Q.reject(U.msg)})),Q},B.tf5=function(){let Q=U(),l=F(),R={mode:"call",id:l,fun:"tf5",input:[...arguments]};return V.postMessage(R),B.once(l,(U=>{"success"===U.state?Q.resolve(U.msg):Q.reject(U.msg)})),Q},B.terminate=function(){V?(V.terminate(),V=void 0):l("worker has been terminated")},B}}(),process.on("unhandledRejection",(U=>{console.log("outer:unhandledRejection",U)})),process.on("uncaughtException",(U=>{console.log("outer:uncaughtException",U)})),process.on("uncaughtExceptionMonitor",(U=>{console.log("outer:uncaughtExceptionMonitor",U)})),k}()}(V);var l=F(V.exports);let R;return R="undefined"!=typeof window&&void 0!==window.document?l:B,R}));
