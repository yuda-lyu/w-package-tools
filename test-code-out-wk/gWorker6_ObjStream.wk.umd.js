!function(l,Z){"object"==typeof exports&&"undefined"!=typeof module?module.exports=Z(require("worker_threads")):"function"==typeof define&&define.amd?define(["worker_threads"],Z):(l="undefined"!=typeof globalThis?globalThis:l||self).gWorker6_ObjStream=Z(l.worker_threads)}(this,(function(l){"use strict";"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function Z(l){return l&&l.__esModule&&Object.prototype.hasOwnProperty.call(l,"default")?l.default:l}var d={exports:{}};!function(Z,d){Z.exports=function(l){function Z(l){return l&&l.__esModule&&Object.prototype.hasOwnProperty.call(l,"default")?l.default:l}var d={exports:{}};!function(l){var Z=Object.prototype.hasOwnProperty,d="~";function m(){}function b(l,Z,d){this.fn=l,this.context=Z,this.once=d||!1}function G(l,Z,m,G,c){if("function"!=typeof m)throw new TypeError("The listener must be a function");var X=new b(m,G||l,c),W=d?d+Z:Z;return l._events[W]?l._events[W].fn?l._events[W]=[l._events[W],X]:l._events[W].push(X):(l._events[W]=X,l._eventsCount++),l}function c(l,Z){0==--l._eventsCount?l._events=new m:delete l._events[Z]}function X(){this._events=new m,this._eventsCount=0}Object.create&&(m.prototype=Object.create(null),(new m).__proto__||(d=!1)),X.prototype.eventNames=function(){var l,m,b=[];if(0===this._eventsCount)return b;for(m in l=this._events)Z.call(l,m)&&b.push(d?m.slice(1):m);return Object.getOwnPropertySymbols?b.concat(Object.getOwnPropertySymbols(l)):b},X.prototype.listeners=function(l){var Z=d?d+l:l,m=this._events[Z];if(!m)return[];if(m.fn)return[m.fn];for(var b=0,G=m.length,c=new Array(G);b<G;b++)c[b]=m[b].fn;return c},X.prototype.listenerCount=function(l){var Z=d?d+l:l,m=this._events[Z];return m?m.fn?1:m.length:0},X.prototype.emit=function(l,Z,m,b,G,c){var X=d?d+l:l;if(!this._events[X])return!1;var W,u,y=this._events[X],i=arguments.length;if(y.fn){switch(y.once&&this.removeListener(l,y.fn,void 0,!0),i){case 1:return y.fn.call(y.context),!0;case 2:return y.fn.call(y.context,Z),!0;case 3:return y.fn.call(y.context,Z,m),!0;case 4:return y.fn.call(y.context,Z,m,b),!0;case 5:return y.fn.call(y.context,Z,m,b,G),!0;case 6:return y.fn.call(y.context,Z,m,b,G,c),!0}for(u=1,W=new Array(i-1);u<i;u++)W[u-1]=arguments[u];y.fn.apply(y.context,W)}else{var V,I=y.length;for(u=0;u<I;u++)switch(y[u].once&&this.removeListener(l,y[u].fn,void 0,!0),i){case 1:y[u].fn.call(y[u].context);break;case 2:y[u].fn.call(y[u].context,Z);break;case 3:y[u].fn.call(y[u].context,Z,m);break;case 4:y[u].fn.call(y[u].context,Z,m,b);break;default:if(!W)for(V=1,W=new Array(i-1);V<i;V++)W[V-1]=arguments[V];y[u].fn.apply(y[u].context,W)}}return!0},X.prototype.on=function(l,Z,d){return G(this,l,Z,d,!1)},X.prototype.once=function(l,Z,d){return G(this,l,Z,d,!0)},X.prototype.removeListener=function(l,Z,m,b){var G=d?d+l:l;if(!this._events[G])return this;if(!Z)return c(this,G),this;var X=this._events[G];if(X.fn)X.fn!==Z||b&&!X.once||m&&X.context!==m||c(this,G);else{for(var W=0,u=[],y=X.length;W<y;W++)(X[W].fn!==Z||b&&!X[W].once||m&&X[W].context!==m)&&u.push(X[W]);u.length?this._events[G]=1===u.length?u[0]:u:c(this,G)}return this},X.prototype.removeAllListeners=function(l){var Z;return l?(Z=d?d+l:l,this._events[Z]&&c(this,Z)):(this._events=new m,this._eventsCount=0),this},X.prototype.off=X.prototype.removeListener,X.prototype.addListener=X.prototype.on,X.prefixed=d,X.EventEmitter=X,l.exports=X}(d);var m=Z(d.exports);let b;!function(){if("nodejs"!=("undefined"!=typeof window&&void 0!==window.document?"browser":"nodejs"))return null;function Z(){return new m}function d(){let l,Z,d=new Promise((function(){l=arguments[0],Z=arguments[1]}));return d.resolve=l,d.reject=Z,d}function G(){let l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,Z=[],d="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),m=d.length;for(let b=0;b<l;b++)Z[b]=d[0|Math.random()*m];return Z.join("")}let c=(X="",Buffer.from(X,"base64").toString("utf8"));var X;function W(){let m=Z(),b=function(Z){try{return new l.Worker(Z,{eval:!0})}catch(l){X(l)}}(c);if(!b)return X("invalid worker"),null;function X(l){m.emit("error",l)}return b.on("message",(function(l){let Z=l,d=Z.mode;"emit"!==d&&"return"!==d||("emit"===d&&m.emit(Z.evName,Z.msg),"return"===d&&m.emit(Z.id,Z))})),b.on("error",X),b.on("exit",(l=>{1!==l&&X("exit code["+l+"] !== 1")})),function(){let l={mode:"init",type:"object",input:[...arguments]};b.postMessage(l)}([...arguments]),m.stringify=function(){let l=d(),Z=G(),c={mode:"call",id:Z,fun:"stringify",input:[...arguments]};return b.postMessage(c),m.once(Z,(Z=>{"success"===Z.state?l.resolve(Z.msg):l.reject(Z.msg)})),l},m.parse=function(){let l=d(),Z=G(),c={mode:"call",id:Z,fun:"parse",input:[...arguments]};return b.postMessage(c),m.once(Z,(Z=>{"success"===Z.state?l.resolve(Z.msg):l.reject(Z.msg)})),l},m.terminate=function(){b?(b.terminate(),b=void 0):X("worker has been terminated")},m}let u={stringify:async function(){let l=[...arguments],Z=W();return await Z.stringify(...l).finally((()=>{Z.terminate()}))},parse:async function(){let l=[...arguments],Z=W();return await Z.parse(...l).finally((()=>{Z.terminate()}))}};b=Z();for(let l in u){let Z=u[l];b[l]=Z}}();try{process.on("unhandledRejection",(l=>{console.log("outer:unhandledRejection",l)})),process.on("uncaughtException",(l=>{console.log("outer:uncaughtException",l)})),process.on("uncaughtExceptionMonitor",(l=>{console.log("outer:uncaughtExceptionMonitor",l)}))}catch(l){}return b}(l)}(d);var m=Z(d.exports),b={exports:{}};!function(l,Z){l.exports=function(){const l="function"==typeof Buffer,Z="function"==typeof TextDecoder?new TextDecoder:void 0,d=(l=>{let Z={};return l.forEach(((l,d)=>Z[l]=d)),Z})(("function"==typeof TextEncoder&&new TextEncoder,Array.prototype.slice.call("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="))),m=/^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/,b=String.fromCharCode.bind(String),G="function"==typeof Uint8Array.from?Uint8Array.from.bind(Uint8Array):l=>new Uint8Array(Array.prototype.slice.call(l,0)),c=l=>l.replace(/[^A-Za-z0-9\+\/]/g,""),X=/[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g,W=l=>{switch(l.length){case 4:var Z=((7&l.charCodeAt(0))<<18|(63&l.charCodeAt(1))<<12|(63&l.charCodeAt(2))<<6|63&l.charCodeAt(3))-65536;return b(55296+(Z>>>10))+b(56320+(1023&Z));case 3:return b((15&l.charCodeAt(0))<<12|(63&l.charCodeAt(1))<<6|63&l.charCodeAt(2));default:return b((31&l.charCodeAt(0))<<6|63&l.charCodeAt(1))}},u=l=>l.replace(X,W),y=l=>{if(l=l.replace(/\s+/g,""),!m.test(l))throw new TypeError("malformed base64.");l+="==".slice(2-(3&l.length));let Z,G,c,X="";for(let m=0;m<l.length;)Z=d[l.charAt(m++)]<<18|d[l.charAt(m++)]<<12|(G=d[l.charAt(m++)])<<6|(c=d[l.charAt(m++)]),X+=64===G?b(Z>>16&255):64===c?b(Z>>16&255,Z>>8&255):b(Z>>16&255,Z>>8&255,255&Z);return X},i="function"==typeof atob?l=>atob(c(l)):l?l=>Buffer.from(l,"base64").toString("binary"):y,V=l?l=>G(Buffer.from(l,"base64")):l=>G(i(l).split("").map((l=>l.charCodeAt(0)))),I=l?l=>Buffer.from(l,"base64").toString("utf8"):Z?l=>Z.decode(V(l)):l=>u(i(l)),p=l=>c(l.replace(/[-_]/g,(l=>"-"==l?"+":"/"))),h=l=>I(p(l)),Y=h;function R(l){return l&&l.__esModule&&Object.prototype.hasOwnProperty.call(l,"default")?l.default:l}var a={exports:{}};!function(l){var Z=Object.prototype.hasOwnProperty,d="~";function m(){}function b(l,Z,d){this.fn=l,this.context=Z,this.once=d||!1}function G(l,Z,m,G,c){if("function"!=typeof m)throw new TypeError("The listener must be a function");var X=new b(m,G||l,c),W=d?d+Z:Z;return l._events[W]?l._events[W].fn?l._events[W]=[l._events[W],X]:l._events[W].push(X):(l._events[W]=X,l._eventsCount++),l}function c(l,Z){0==--l._eventsCount?l._events=new m:delete l._events[Z]}function X(){this._events=new m,this._eventsCount=0}Object.create&&(m.prototype=Object.create(null),(new m).__proto__||(d=!1)),X.prototype.eventNames=function(){var l,m,b=[];if(0===this._eventsCount)return b;for(m in l=this._events)Z.call(l,m)&&b.push(d?m.slice(1):m);return Object.getOwnPropertySymbols?b.concat(Object.getOwnPropertySymbols(l)):b},X.prototype.listeners=function(l){var Z=d?d+l:l,m=this._events[Z];if(!m)return[];if(m.fn)return[m.fn];for(var b=0,G=m.length,c=new Array(G);b<G;b++)c[b]=m[b].fn;return c},X.prototype.listenerCount=function(l){var Z=d?d+l:l,m=this._events[Z];return m?m.fn?1:m.length:0},X.prototype.emit=function(l,Z,m,b,G,c){var X=d?d+l:l;if(!this._events[X])return!1;var W,u,y=this._events[X],i=arguments.length;if(y.fn){switch(y.once&&this.removeListener(l,y.fn,void 0,!0),i){case 1:return y.fn.call(y.context),!0;case 2:return y.fn.call(y.context,Z),!0;case 3:return y.fn.call(y.context,Z,m),!0;case 4:return y.fn.call(y.context,Z,m,b),!0;case 5:return y.fn.call(y.context,Z,m,b,G),!0;case 6:return y.fn.call(y.context,Z,m,b,G,c),!0}for(u=1,W=new Array(i-1);u<i;u++)W[u-1]=arguments[u];y.fn.apply(y.context,W)}else{var V,I=y.length;for(u=0;u<I;u++)switch(y[u].once&&this.removeListener(l,y[u].fn,void 0,!0),i){case 1:y[u].fn.call(y[u].context);break;case 2:y[u].fn.call(y[u].context,Z);break;case 3:y[u].fn.call(y[u].context,Z,m);break;case 4:y[u].fn.call(y[u].context,Z,m,b);break;default:if(!W)for(V=1,W=new Array(i-1);V<i;V++)W[V-1]=arguments[V];y[u].fn.apply(y[u].context,W)}}return!0},X.prototype.on=function(l,Z,d){return G(this,l,Z,d,!1)},X.prototype.once=function(l,Z,d){return G(this,l,Z,d,!0)},X.prototype.removeListener=function(l,Z,m,b){var G=d?d+l:l;if(!this._events[G])return this;if(!Z)return c(this,G),this;var X=this._events[G];if(X.fn)X.fn!==Z||b&&!X.once||m&&X.context!==m||c(this,G);else{for(var W=0,u=[],y=X.length;W<y;W++)(X[W].fn!==Z||b&&!X[W].once||m&&X[W].context!==m)&&u.push(X[W]);u.length?this._events[G]=1===u.length?u[0]:u:c(this,G)}return this},X.prototype.removeAllListeners=function(l){var Z;return l?(Z=d?d+l:l,this._events[Z]&&c(this,Z)):(this._events=new m,this._eventsCount=0),this},X.prototype.off=X.prototype.removeListener,X.prototype.addListener=X.prototype.on,X.prefixed=d,X.EventEmitter=X,l.exports=X}(a);var K=R(a.exports);let L;!function(){if("browser"!=("undefined"!=typeof window&&void 0!==window.document?"browser":"nodejs"))return null;function l(){return new K}function Z(){let l,Z,d=new Promise((function(){l=arguments[0],Z=arguments[1]}));return d.resolve=l,d.reject=Z,d}function d(){let l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,Z=[],d="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),m=d.length;for(let b=0;b<l;b++)Z[b]=d[0|Math.random()*m];return Z.join("")}let m=Y("");function b(){let b=l(),G=function(l){try{let Z=new Blob([l]),d=window.URL||window.webkitURL;return new Worker(d.createObjectURL(Z))}catch(l){c(l)}}(m);if(!G)return c("invalid worker"),null;function c(l){b.emit("error",l)}return G.onmessage=function(l){!function(l){let Z=l,d=Z.mode;"emit"!==d&&"return"!==d||("emit"===d&&b.emit(Z.evName,Z.msg),"return"===d&&b.emit(Z.id,Z))}(l.data)},G.onerror=c,G.onmessageerror=function(l){c(l.data)},function(){let l={mode:"init",type:"object",input:[...arguments]};G.postMessage(l)}([...arguments]),b.stringify=function(){let l=Z(),m=d(),c={mode:"call",id:m,fun:"stringify",input:[...arguments]};return G.postMessage(c),b.once(m,(Z=>{"success"===Z.state?l.resolve(Z.msg):l.reject(Z.msg)})),l},b.parse=function(){let l=Z(),m=d(),c={mode:"call",id:m,fun:"parse",input:[...arguments]};return G.postMessage(c),b.once(m,(Z=>{"success"===Z.state?l.resolve(Z.msg):l.reject(Z.msg)})),l},b.terminate=function(){G?(G.terminate(),G=void 0):c("worker has been terminated")},b}let G={stringify:async function(){let l=[...arguments],Z=b();return await Z.stringify(...l).finally((()=>{Z.terminate()}))},parse:async function(){let l=[...arguments],Z=b();return await Z.parse(...l).finally((()=>{Z.terminate()}))}};L=l();for(let l in G){let Z=G[l];L[l]=Z}}();try{process.on("unhandledRejection",(l=>{console.log("outer:unhandledRejection",l)})),process.on("uncaughtException",(l=>{console.log("outer:uncaughtException",l)})),process.on("uncaughtExceptionMonitor",(l=>{console.log("outer:uncaughtExceptionMonitor",l)}))}catch(l){}return L}()}(b);var G=Z(b.exports);let c;return c="undefined"!=typeof window&&void 0!==window.document?G:m,c}));
