!function(Z,l){"object"==typeof exports&&"undefined"!=typeof module?module.exports=l(require("worker_threads")):"function"==typeof define&&define.amd?define(["worker_threads"],l):(Z="undefined"!=typeof globalThis?globalThis:Z||self).gWorker6_ObjStream=l(Z.worker_threads)}(this,(function(Z){"use strict";"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function l(Z){return Z&&Z.__esModule&&Object.prototype.hasOwnProperty.call(Z,"default")?Z.default:Z}var d={exports:{}};!function(l,d){l.exports=function(Z){function l(Z){return Z&&Z.__esModule&&Object.prototype.hasOwnProperty.call(Z,"default")?Z.default:Z}var d={exports:{}};!function(Z){var l=Object.prototype.hasOwnProperty,d="~";function m(){}function b(Z,l,d){this.fn=Z,this.context=l,this.once=d||!1}function G(Z,l,m,G,c){if("function"!=typeof m)throw new TypeError("The listener must be a function");var X=new b(m,G||Z,c),W=d?d+l:l;return Z._events[W]?Z._events[W].fn?Z._events[W]=[Z._events[W],X]:Z._events[W].push(X):(Z._events[W]=X,Z._eventsCount++),Z}function c(Z,l){0==--Z._eventsCount?Z._events=new m:delete Z._events[l]}function X(){this._events=new m,this._eventsCount=0}Object.create&&(m.prototype=Object.create(null),(new m).__proto__||(d=!1)),X.prototype.eventNames=function(){var Z,m,b=[];if(0===this._eventsCount)return b;for(m in Z=this._events)l.call(Z,m)&&b.push(d?m.slice(1):m);return Object.getOwnPropertySymbols?b.concat(Object.getOwnPropertySymbols(Z)):b},X.prototype.listeners=function(Z){var l=d?d+Z:Z,m=this._events[l];if(!m)return[];if(m.fn)return[m.fn];for(var b=0,G=m.length,c=new Array(G);b<G;b++)c[b]=m[b].fn;return c},X.prototype.listenerCount=function(Z){var l=d?d+Z:Z,m=this._events[l];return m?m.fn?1:m.length:0},X.prototype.emit=function(Z,l,m,b,G,c){var X=d?d+Z:Z;if(!this._events[X])return!1;var W,u,i=this._events[X],y=arguments.length;if(i.fn){switch(i.once&&this.removeListener(Z,i.fn,void 0,!0),y){case 1:return i.fn.call(i.context),!0;case 2:return i.fn.call(i.context,l),!0;case 3:return i.fn.call(i.context,l,m),!0;case 4:return i.fn.call(i.context,l,m,b),!0;case 5:return i.fn.call(i.context,l,m,b,G),!0;case 6:return i.fn.call(i.context,l,m,b,G,c),!0}for(u=1,W=new Array(y-1);u<y;u++)W[u-1]=arguments[u];i.fn.apply(i.context,W)}else{var p,V=i.length;for(u=0;u<V;u++)switch(i[u].once&&this.removeListener(Z,i[u].fn,void 0,!0),y){case 1:i[u].fn.call(i[u].context);break;case 2:i[u].fn.call(i[u].context,l);break;case 3:i[u].fn.call(i[u].context,l,m);break;case 4:i[u].fn.call(i[u].context,l,m,b);break;default:if(!W)for(p=1,W=new Array(y-1);p<y;p++)W[p-1]=arguments[p];i[u].fn.apply(i[u].context,W)}}return!0},X.prototype.on=function(Z,l,d){return G(this,Z,l,d,!1)},X.prototype.once=function(Z,l,d){return G(this,Z,l,d,!0)},X.prototype.removeListener=function(Z,l,m,b){var G=d?d+Z:Z;if(!this._events[G])return this;if(!l)return c(this,G),this;var X=this._events[G];if(X.fn)X.fn!==l||b&&!X.once||m&&X.context!==m||c(this,G);else{for(var W=0,u=[],i=X.length;W<i;W++)(X[W].fn!==l||b&&!X[W].once||m&&X[W].context!==m)&&u.push(X[W]);u.length?this._events[G]=1===u.length?u[0]:u:c(this,G)}return this},X.prototype.removeAllListeners=function(Z){var l;return Z?(l=d?d+Z:Z,this._events[l]&&c(this,l)):(this._events=new m,this._eventsCount=0),this},X.prototype.off=X.prototype.removeListener,X.prototype.addListener=X.prototype.on,X.prefixed=d,X.EventEmitter=X,Z.exports=X}(d);var m=l(d.exports);let b;!function(){if("nodejs"!=("undefined"!=typeof window&&void 0!==window.document?"browser":"nodejs"))return null;function l(){return new m}function d(){let Z,l,d=new Promise((function(){Z=arguments[0],l=arguments[1]}));return d.resolve=Z,d.reject=l,d}function G(){let Z=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,l=[],d="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),m=d.length;for(let b=0;b<Z;b++)l[b]=d[0|Math.random()*m];return l.join("")}let c=(X="",Buffer.from(X,"base64").toString("utf8"));var X;function W(){let m=l(),b=function(l){try{return new Z.Worker(l,{eval:!0})}catch(Z){X(Z)}}(c);if(!b)return X("invalid worker"),null;function X(Z){m.emit("error",Z)}return b.on("message",(function(Z){let l=Z,d=l.mode;"emit"!==d&&"return"!==d||("emit"===d&&m.emit(l.evName,l.msg),"return"===d&&m.emit(l.id,l))})),b.on("error",X),b.on("exit",(Z=>{1!==Z&&X("exit code["+Z+"] !== 1")})),function(){let Z={mode:"init",type:"object",input:[...arguments]};b.postMessage(Z)}([...arguments]),m.stringify=function(){let Z=d(),l=G(),c={mode:"call",id:l,fun:"stringify",input:[...arguments]};return b.postMessage(c),m.once(l,(l=>{"success"===l.state?Z.resolve(l.msg):Z.reject(l.msg)})),Z},m.parse=function(){let Z=d(),l=G(),c={mode:"call",id:l,fun:"parse",input:[...arguments]};return b.postMessage(c),m.once(l,(l=>{"success"===l.state?Z.resolve(l.msg):Z.reject(l.msg)})),Z},m.terminate=function(){b?(b.terminate(),b=void 0):X("worker has been terminated")},m}let u={stringify:async function(){let Z=[...arguments],l=W();return await l.stringify(...Z).finally((()=>{l.terminate()}))},parse:async function(){let Z=[...arguments],l=W();return await l.parse(...Z).finally((()=>{l.terminate()}))}};b=l();for(let Z in u){let l=u[Z];b[Z]=l}}();try{process.on("unhandledRejection",(Z=>{console.log("outer:unhandledRejection",Z)})),process.on("uncaughtException",(Z=>{console.log("outer:uncaughtException",Z)})),process.on("uncaughtExceptionMonitor",(Z=>{console.log("outer:uncaughtExceptionMonitor",Z)}))}catch(Z){}return b}(Z)}(d);var m=l(d.exports),b={exports:{}};!function(Z,l){Z.exports=function(){const Z="function"==typeof Buffer,l="function"==typeof TextDecoder?new TextDecoder:void 0,d=(Z=>{let l={};return Z.forEach(((Z,d)=>l[Z]=d)),l})(("function"==typeof TextEncoder&&new TextEncoder,Array.prototype.slice.call("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="))),m=/^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/,b=String.fromCharCode.bind(String),G="function"==typeof Uint8Array.from?Uint8Array.from.bind(Uint8Array):Z=>new Uint8Array(Array.prototype.slice.call(Z,0)),c=Z=>Z.replace(/[^A-Za-z0-9\+\/]/g,""),X=/[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g,W=Z=>{switch(Z.length){case 4:var l=((7&Z.charCodeAt(0))<<18|(63&Z.charCodeAt(1))<<12|(63&Z.charCodeAt(2))<<6|63&Z.charCodeAt(3))-65536;return b(55296+(l>>>10))+b(56320+(1023&l));case 3:return b((15&Z.charCodeAt(0))<<12|(63&Z.charCodeAt(1))<<6|63&Z.charCodeAt(2));default:return b((31&Z.charCodeAt(0))<<6|63&Z.charCodeAt(1))}},u=Z=>Z.replace(X,W),i=Z=>{if(Z=Z.replace(/\s+/g,""),!m.test(Z))throw new TypeError("malformed base64.");Z+="==".slice(2-(3&Z.length));let l,G,c,X="";for(let m=0;m<Z.length;)l=d[Z.charAt(m++)]<<18|d[Z.charAt(m++)]<<12|(G=d[Z.charAt(m++)])<<6|(c=d[Z.charAt(m++)]),X+=64===G?b(l>>16&255):64===c?b(l>>16&255,l>>8&255):b(l>>16&255,l>>8&255,255&l);return X},y="function"==typeof atob?Z=>atob(c(Z)):Z?Z=>Buffer.from(Z,"base64").toString("binary"):i,p=Z?Z=>G(Buffer.from(Z,"base64")):Z=>G(y(Z).split("").map((Z=>Z.charCodeAt(0)))),V=Z?Z=>Buffer.from(Z,"base64").toString("utf8"):l?Z=>l.decode(p(Z)):Z=>u(y(Z)),I=Z=>c(Z.replace(/[-_]/g,(Z=>"-"==Z?"+":"/"))),h=Z=>V(I(Z)),Y=h;function R(Z){return Z&&Z.__esModule&&Object.prototype.hasOwnProperty.call(Z,"default")?Z.default:Z}var a={exports:{}};!function(Z){var l=Object.prototype.hasOwnProperty,d="~";function m(){}function b(Z,l,d){this.fn=Z,this.context=l,this.once=d||!1}function G(Z,l,m,G,c){if("function"!=typeof m)throw new TypeError("The listener must be a function");var X=new b(m,G||Z,c),W=d?d+l:l;return Z._events[W]?Z._events[W].fn?Z._events[W]=[Z._events[W],X]:Z._events[W].push(X):(Z._events[W]=X,Z._eventsCount++),Z}function c(Z,l){0==--Z._eventsCount?Z._events=new m:delete Z._events[l]}function X(){this._events=new m,this._eventsCount=0}Object.create&&(m.prototype=Object.create(null),(new m).__proto__||(d=!1)),X.prototype.eventNames=function(){var Z,m,b=[];if(0===this._eventsCount)return b;for(m in Z=this._events)l.call(Z,m)&&b.push(d?m.slice(1):m);return Object.getOwnPropertySymbols?b.concat(Object.getOwnPropertySymbols(Z)):b},X.prototype.listeners=function(Z){var l=d?d+Z:Z,m=this._events[l];if(!m)return[];if(m.fn)return[m.fn];for(var b=0,G=m.length,c=new Array(G);b<G;b++)c[b]=m[b].fn;return c},X.prototype.listenerCount=function(Z){var l=d?d+Z:Z,m=this._events[l];return m?m.fn?1:m.length:0},X.prototype.emit=function(Z,l,m,b,G,c){var X=d?d+Z:Z;if(!this._events[X])return!1;var W,u,i=this._events[X],y=arguments.length;if(i.fn){switch(i.once&&this.removeListener(Z,i.fn,void 0,!0),y){case 1:return i.fn.call(i.context),!0;case 2:return i.fn.call(i.context,l),!0;case 3:return i.fn.call(i.context,l,m),!0;case 4:return i.fn.call(i.context,l,m,b),!0;case 5:return i.fn.call(i.context,l,m,b,G),!0;case 6:return i.fn.call(i.context,l,m,b,G,c),!0}for(u=1,W=new Array(y-1);u<y;u++)W[u-1]=arguments[u];i.fn.apply(i.context,W)}else{var p,V=i.length;for(u=0;u<V;u++)switch(i[u].once&&this.removeListener(Z,i[u].fn,void 0,!0),y){case 1:i[u].fn.call(i[u].context);break;case 2:i[u].fn.call(i[u].context,l);break;case 3:i[u].fn.call(i[u].context,l,m);break;case 4:i[u].fn.call(i[u].context,l,m,b);break;default:if(!W)for(p=1,W=new Array(y-1);p<y;p++)W[p-1]=arguments[p];i[u].fn.apply(i[u].context,W)}}return!0},X.prototype.on=function(Z,l,d){return G(this,Z,l,d,!1)},X.prototype.once=function(Z,l,d){return G(this,Z,l,d,!0)},X.prototype.removeListener=function(Z,l,m,b){var G=d?d+Z:Z;if(!this._events[G])return this;if(!l)return c(this,G),this;var X=this._events[G];if(X.fn)X.fn!==l||b&&!X.once||m&&X.context!==m||c(this,G);else{for(var W=0,u=[],i=X.length;W<i;W++)(X[W].fn!==l||b&&!X[W].once||m&&X[W].context!==m)&&u.push(X[W]);u.length?this._events[G]=1===u.length?u[0]:u:c(this,G)}return this},X.prototype.removeAllListeners=function(Z){var l;return Z?(l=d?d+Z:Z,this._events[l]&&c(this,l)):(this._events=new m,this._eventsCount=0),this},X.prototype.off=X.prototype.removeListener,X.prototype.addListener=X.prototype.on,X.prefixed=d,X.EventEmitter=X,Z.exports=X}(a);var K=R(a.exports);let J;!function(){if("browser"!=("undefined"!=typeof window&&void 0!==window.document?"browser":"nodejs"))return null;function Z(){return new K}function l(){let Z,l,d=new Promise((function(){Z=arguments[0],l=arguments[1]}));return d.resolve=Z,d.reject=l,d}function d(){let Z=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,l=[],d="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),m=d.length;for(let b=0;b<Z;b++)l[b]=d[0|Math.random()*m];return l.join("")}let m=Y("");function b(){let b=Z(),G=function(Z){try{let l=new Blob([Z]),d=window.URL||window.webkitURL;return new Worker(d.createObjectURL(l))}catch(Z){c(Z)}}(m);if(!G)return c("invalid worker"),null;function c(Z){b.emit("error",Z)}return G.onmessage=function(Z){!function(Z){let l=Z,d=l.mode;"emit"!==d&&"return"!==d||("emit"===d&&b.emit(l.evName,l.msg),"return"===d&&b.emit(l.id,l))}(Z.data)},G.onerror=c,G.onmessageerror=function(Z){c(Z.data)},function(){let Z={mode:"init",type:"object",input:[...arguments]};G.postMessage(Z)}([...arguments]),b.stringify=function(){let Z=l(),m=d(),c={mode:"call",id:m,fun:"stringify",input:[...arguments]};return G.postMessage(c),b.once(m,(l=>{"success"===l.state?Z.resolve(l.msg):Z.reject(l.msg)})),Z},b.parse=function(){let Z=l(),m=d(),c={mode:"call",id:m,fun:"parse",input:[...arguments]};return G.postMessage(c),b.once(m,(l=>{"success"===l.state?Z.resolve(l.msg):Z.reject(l.msg)})),Z},b.terminate=function(){G?(G.terminate(),G=void 0):c("worker has been terminated")},b}let G={stringify:async function(){let Z=[...arguments],l=b();return await l.stringify(...Z).finally((()=>{l.terminate()}))},parse:async function(){let Z=[...arguments],l=b();return await l.parse(...Z).finally((()=>{l.terminate()}))}};J=Z();for(let Z in G){let l=G[Z];J[Z]=l}}();try{process.on("unhandledRejection",(Z=>{console.log("outer:unhandledRejection",Z)})),process.on("uncaughtException",(Z=>{console.log("outer:uncaughtException",Z)})),process.on("uncaughtExceptionMonitor",(Z=>{console.log("outer:uncaughtExceptionMonitor",Z)}))}catch(Z){}return J}()}(b);var G=l(b.exports);let c;return c="undefined"!=typeof window&&void 0!==window.document?G:m,c}));
